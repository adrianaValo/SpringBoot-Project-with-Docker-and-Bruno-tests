{
	"info": {
		"_postman_id": "87f0ac73-9bec-4290-90b2-9c7b05da555a",
		"name": "ProductRestAPI_for_Docker",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33707961"
	},
	"item": [
		{
			"name": "StoreProduct",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Product stored successfully\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Product stored successfully\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"pid\" : 5,\r\n    \"pname\" : \"Thing\",\r\n    \"price\" : 3000,\r\n    \"qty\" : 14\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{productURL}}/store",
					"host": [
						"{{productURL}}"
					],
					"path": [
						"store"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateProductPrice",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"pid\" : 5, \r\n    \"price\" : 99000\r\n    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{productURL}}/updateprice",
					"host": [
						"{{productURL}}"
					],
					"path": [
						"updateprice"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateProductQty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Product qty updated successfully\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Product qty updated successfully\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"pid\" : 5, \r\n    \"qty\" : 14\r\n    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{productURL}}/updateqty",
					"host": [
						"{{productURL}}"
					],
					"path": [
						"updateqty"
					]
				}
			},
			"response": []
		},
		{
			"name": "FindAllProductInfo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{productURL}}/findAll",
					"host": [
						"{{productURL}}"
					],
					"path": [
						"findAll"
					]
				}
			},
			"response": []
		},
		{
			"name": "FindProductByID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{productURL}}/findbyid/5",
					"host": [
						"{{productURL}}"
					],
					"path": [
						"findbyid",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "PlaceOrder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"pid\" : 5,\r\n    \"qty\" : 4\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/orders/placeorder",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"orders",
						"placeorder"
					]
				}
			},
			"response": []
		},
		{
			"name": "ViewOrders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0]).to.include(\"TV\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/orders/vieworder",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"orders",
						"vieworder"
					]
				}
			},
			"response": [
				{
					"name": "ViewOrders",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/orders/vieworder",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"orders",
								"vieworder"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Sat, 22 Jun 2024 12:58:39 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "[\n    [\n        \"TV\",\n        32000,\n        1,\n        2\n    ],\n    [\n        \"Phone\",\n        93000,\n        2,\n        2\n    ]\n]"
				}
			]
		},
		{
			"name": "DeleteProduct",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Product deleted successfully\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Product deleted successfully\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{productURL}}/delete/5",
					"host": [
						"{{productURL}}"
					],
					"path": [
						"delete",
						"5"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "productURL",
			"value": "http://localhost:8080/product"
		}
	]
}